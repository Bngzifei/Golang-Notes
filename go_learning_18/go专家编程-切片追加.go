package main

/*
Golang内置方法 append 用于向切片中追加一个或多个元素,实际项目中比较常见.
其原型如下:
	func append(slice []Type,elems ...Type) []Type

陷阱:
	append 会改变切片的地址
	append 的本质是向切片中追加数据,而随着切片中元素逐渐增加,当切片底层的
数组将满时,切片会发生扩容,扩容会导致产生一个新的切片(拥有容量更大的底层数组)
append 每个追加元素,都有可能触发切片扩容,也极有可能返回一个新的切片,这也是
append函数声明中返回值为切片的原因.实际使用中应该总是接收该返回值.

上述题目中,由于初始切片长度为0,所以实际上每次append都会产生一个新的切片并
迅速抛弃(被gc回收).原始切片并没有任何改变.需要特别说明的是,不管初始切片长度
为多少,不接收append返回都是有极大风险的.

另外,目前有很多的工具都可以自动检查出类似的问题,比如 Goland IDE就会给出很明显的提示.

append 可以追加nil值
向切片中追加一个nil值是完全不报错的.
slice := append(slice,nil)

*/
